networks:
  keycloak:
    external: false
  proxy:
    external: true


services:
  postgres:
    image: postgres:17
    container_name: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    networks:
      - keycloak
      - proxy

  keycloak:
    image: keycloak/keycloak:26.1
    container_name: keycloak
    command: start
#    command: ["-b", "0.0.0.0", "-Dkeycloak.profile.feature.docker=enabled"]
    environment:
      KC_HOSTNAME: ${DOMAIN_NAME}
      KC_HOSTNAME_PORT: 8080
      KC_HOSTNAME_STRICT_BACKCHANNEL: false
      KC_HTTP_ENABLED: true
      KC_HOSTNAME_STRICT_HTTPS: false
      KC_HEALTH_ENABLED: true
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres/${POSTGRES_DB}
      KC_DB_USERNAME: ${POSTGRES_USER}
      KC_DB_PASSWORD: ${POSTGRES_PASSWORD}
      KC_PROXY_HEADERS: xforwarded
 #     PROXY_ADDRESS_FORWARDING: true
    ports:
#      - 8080:8080
      - 9000:9000
      - 8884:8443
      - 8888:8080
    restart: always
    depends_on:
      - postgres
    networks:
      - keycloak
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=proxy"
      - "traefik.http.routers.keycloak.entrypoints=web"
      - "traefik.http.routers.keycloak.rule=Host(`${DOMAIN_NAME}`)"
      - "traefik.http.middlewares.keycloak-https-redirect.redirectscheme.scheme=websecure"
      - "traefik.http.routers.keycloak.middlewares=keycloak-https-redirect"
      - "traefik.http.routers.keycloak-secure.entrypoints=websecure"
      - "traefik.http.routers.keycloak-secure.rule=Host(`${DOMAIN_NAME}`)"
#      - "traefik.http.routers.keycloak-secure.middlewares=user-auth@file"
      - "traefik.http.routers.keycloak-secure.service=keycloak"
      - "traefik.http.services.keycloak.loadbalancer.server.port=8080"
      - "traefik.http.routers.keycloak-secure.tls=true"


volumes:
  postgres_data:
